<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [File Handling]-->
<tool id="FileInfo" name="FileInfo" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Shows basic information about the file, such as data ranges and file type.</description>
  <macros>
    <token name="@EXECUTABLE@">FileInfo</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#if $out_FLAG:
  mkdir out &&
#end if
#if $adv_opts_cond.adv_opts_selector=='advanced':
  #if $adv_opts_cond.out_tsv_FLAG:
    mkdir out_tsv &&
  #end if
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#if $out_FLAG:
  -out
  'out/output.${gxy2omsext("txt")}'
#end if
#if $adv_opts_cond.adv_opts_selector=='advanced':
  #if $adv_opts_cond.out_tsv_FLAG:
    -out_tsv
    'out_tsv/output.${gxy2omsext("csv")}'
  #end if
#end if
#if not($out_FLAG) and not($adv_opts_cond.out_tsv_FLAG):
  | tee '$stdout'
#end if

## Postprocessing
#if $out_FLAG:
  && mv 'out/output.${gxy2omsext("txt")}' '$out'
#end if
#if $adv_opts_cond.adv_opts_selector=='advanced':
  #if $adv_opts_cond.out_tsv_FLAG:
    && mv 'out_tsv/output.${gxy2omsext("csv")}' '$out_tsv'
  #end if
#end if
#if $adv_opts_cond.ctd_out_FLAG
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="consensusxml,dta,dta2d,fasta,featurexml,idxml,mgf,mzdata,mzid,mzml,mzxml,pepxml,trafoxml" optional="false" label="input file" help=" select consensusxml,dta,dta2d,fasta,featurexml,idxml,mgf,mzdata,mzid,mzml,mzxml,pepxml,trafoxml data sets(s)"/>
    <param type="boolean" name="out_FLAG" checked="false" truevalue="true" falsevalue="false" label="Generate output out (Optional output file)" help="If left out, the output is written to the command line"/>
    <param name="m" argument="-m" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Show meta information about the whole experiment" help=""/>
    <param name="p" argument="-p" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Shows data processing information" help=""/>
    <param name="s" argument="-s" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Computes a five-number statistics of intensities, qualities, and widths" help=""/>
    <param name="d" argument="-d" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Show detailed listing of all spectra and chromatograms (peak files only)" help=""/>
    <param name="c" argument="-c" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Check for corrupt data in the file (peak files only)" help=""/>
    <param name="v" argument="-v" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Validate the file only (for mzML, mzData, mzXML, featureXML, idXML, consensusXML, pepXML)" help=""/>
    <param name="i" argument="-i" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Check whether a given mzML file contains valid indices (conforming to the indexedmzML standard)" help=""/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param type="boolean" name="out_tsv_FLAG" checked="false" truevalue="true" falsevalue="false" label="Generate output out_tsv (Second optional output file)" help="Tab separated flat text file"/>
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="ctd_out_FLAG" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Output used ctd (ini) configuration file"/>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="txt">
      <filter>out_FLAG</filter>
    </data>
    <data name="out_tsv" label="${tool.name} on ${on_string}: out_tsv" format="csv">
      <filter>adv_opts_cond['adv_opts_selector'] == 'advanced' and adv_opts_cond['out_tsv_FLAG']</filter>
    </data>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>not (out_FLAG) and not (adv_opts_cond['adv_opts_selector'] == 'advanced' and adv_opts_cond['out_tsv_FLAG'])</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>adv_opts_cond["adv_opts_selector"]=="advanced" and adv_opts_cond["ctd_out_FLAG"]</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_FileInfo"/>
    <expand macro="manutest_FileInfo"/>
  </tests>
  <help><![CDATA[Shows basic information about the file, such as data ranges and file type.


For more information, visit http://www.openms.de/documentation/TOPP_FileInfo.html]]></help>
  <expand macro="references"/>
</tool>
