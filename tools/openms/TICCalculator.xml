<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="TICCalculator" name="TICCalculator" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Calculates the TIC from a mass spectrometric raw file (useful for benchmarking).</description>
  <macros>
    <token name="@EXECUTABLE@">TICCalculator</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
| tee '$stdout'

## Postprocessing]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="consensusxml,dta,dta2d,edta,featurexml,kroenik,mgf,ms2,mzdata,mzml,mzxml,peplist,tabular,xml" optional="false" label="Input file to convert" help=" select consensusxml,dta,dta2d,edta,featurexml,kroenik,mgf,ms2,mzdata,mzml,mzxml,peplist,tabular,xml data sets(s)"/>
    <param name="read_method" argument="-read_method" type="select" optional="false" label="Method to read the file" help="">
      <option value="regular" selected="true">regular</option>
      <option value="indexed">indexed</option>
      <option value="indexed_parallel">indexed_parallel</option>
      <option value="streaming">streaming</option>
      <option value="cached">cached</option>
      <option value="cached_parallel">cached_parallel</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="loadData" argument="-loadData" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="true" label="Whether to actually load and decode the binary data (or whether to skip decoding the binary data)" help=""/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout"/>
  </outputs>
  <tests>
    <expand macro="autotest_TICCalculator"/>
    <expand macro="manutest_TICCalculator"/>
  </tests>
  <help><![CDATA[Calculates the TIC from a mass spectrometric raw file (useful for benchmarking).

]]></help>
  <expand macro="references"/>
</tool>
