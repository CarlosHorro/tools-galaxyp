<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="SpecLibCreator" name="SpecLibCreator" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Creates an MSP formatted spectral library.</description>
  <macros>
    <token name="@EXECUTABLE@">SpecLibCreator</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir info &&
ln -s '$info' 'info/${re.sub("[^\w\-_]", "_", $info.element_identifier)}.$gxy2omsext($info.ext)' &&
mkdir spec &&
ln -s '$spec' 'spec/${re.sub("[^\w\-_]", "_", $spec.element_identifier)}.$gxy2omsext($spec.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-info
'info/${re.sub("[^\w\-_]", "_", $info.element_identifier)}.$gxy2omsext($info.ext)'
-spec
'spec/${re.sub("[^\w\-_]", "_", $spec.element_identifier)}.$gxy2omsext($spec.ext)'
-out
'out/output.${gxy2omsext("msp")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("msp")}' '$out']]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="info" argument="-info" type="data" format="csv" optional="false" label="Holds id, peptide, retention time etc" help=" select csv data sets(s)"/>
    <param name="itemseperator" argument="-itemseperator" type="text" optional="true" value="," label=" Separator between items. e.g. ," help="">
      <expand macro="list_string_san"/>
    </param>
    <param name="itemenclosed" argument="-itemenclosed" type="boolean" truevalue="true" falsevalue="false" checked="false" label="'true' or 'false' if true every item is enclosed" help="e.g. '$peptide$,$run$"/>
    <param name="spec" argument="-spec" type="data" format="mzdata,mzxml" optional="false" label="spectra" help=" select mzdata,mzxml data sets(s)"/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="msp"/>
  </outputs>
  <tests>
    <expand macro="autotest_SpecLibCreator"/>
    <expand macro="manutest_SpecLibCreator"/>
  </tests>
  <help><![CDATA[Creates an MSP formatted spectral library.


For more information, visit http://www.openms.de/documentation/UTILS_SpecLibCreator.html]]></help>
  <expand macro="references"/>
</tool>
