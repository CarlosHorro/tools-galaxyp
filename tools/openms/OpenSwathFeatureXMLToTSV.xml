<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Targeted Experiments]-->
<tool id="OpenSwathFeatureXMLToTSV" name="OpenSwathFeatureXMLToTSV" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Converts a featureXML to a mProphet tsv.</description>
  <macros>
    <token name="@EXECUTABLE@">OpenSwathFeatureXMLToTSV</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
${ ' '.join(["ln -s '%s' 'in/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _]) }
mkdir tr &&
ln -s '$tr' 'tr/${re.sub("[^\w\-_]", "_", $tr.element_identifier)}.$gxy2omsext($tr.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
${' '.join(["'in/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _])}
-tr
'tr/${re.sub("[^\w\-_]", "_", $tr.element_identifier)}.$gxy2omsext($tr.ext)'
-out
'out/output.${gxy2omsext("csv")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("csv")}' '$out']]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="featurexml" multiple="true" optional="false" label="Input files separated by blank" help=" select featurexml data sets(s)"/>
    <param name="tr" argument="-tr" type="data" format="traml" optional="false" label="TraML transition file" help=" select traml data sets(s)"/>
    <param name="short_format" argument="-short_format" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Whether to write short (one peptide per line) or long format (one transition per line)" help=""/>
    <param name="best_scoring_peptide" argument="-best_scoring_peptide" type="text" optional="true" value="" label="If only the best scoring feature per peptide should be printed, give the variable name" help="">
      <expand macro="list_string_san"/>
    </param>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="csv"/>
  </outputs>
  <tests>
    <expand macro="autotest_OpenSwathFeatureXMLToTSV"/>
    <expand macro="manutest_OpenSwathFeatureXMLToTSV"/>
  </tests>
  <help><![CDATA[Converts a featureXML to a mProphet tsv.


For more information, visit http://www.openms.de/documentation/TOPP_OpenSwathFeatureXMLToTSV.html]]></help>
  <expand macro="references"/>
</tool>
