<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="QCCalculator" name="QCCalculator" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Calculates basic quality parameters from MS experiments and subsequent analysis data as identification or feature detection.</description>
  <macros>
    <token name="@EXECUTABLE@">QCCalculator</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&
#if $id:
  mkdir id &&
  ln -s '$id' 'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)' &&
#end if
#if $feature:
  mkdir feature &&
  ln -s '$feature' 'feature/${re.sub("[^\w\-_]", "_", $feature.element_identifier)}.$gxy2omsext($feature.ext)' &&
#end if
#if $consensus:
  mkdir consensus &&
  ln -s '$consensus' 'consensus/${re.sub("[^\w\-_]", "_", $consensus.element_identifier)}.$gxy2omsext($consensus.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("qcml")}'
#if $id:
  -id
  'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)'
#end if
#if $feature:
  -feature
  'feature/${re.sub("[^\w\-_]", "_", $feature.element_identifier)}.$gxy2omsext($feature.ext)'
#end if
#if $consensus:
  -consensus
  'consensus/${re.sub("[^\w\-_]", "_", $consensus.element_identifier)}.$gxy2omsext($consensus.ext)'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("qcml")}' '$out']]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzml" optional="false" label="raw data input file (this is relevant if you want to look at MS1, MS2 and precursor peak information)" help=" select mzml data sets(s)"/>
    <param name="id" argument="-id" type="data" format="idxml" optional="true" label="Input idXML file containing the identifications" help="Your identifications will be exported in an easy-to-read format select idxml data sets(s)"/>
    <param name="feature" argument="-feature" type="data" format="featurexml" optional="true" label="feature input file (this is relevant for most QC issues)" help=" select featurexml data sets(s)"/>
    <param name="consensus" argument="-consensus" type="data" format="consensusxml" optional="true" label="consensus input file (this is only used for charge state deconvoluted output" help="Use the consensusXML output form the DeCharger) select consensusxml data sets(s)"/>
    <param name="remove_duplicate_features" argument="-remove_duplicate_features" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="This flag should be set, if you work with a set of merged features" help=""/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="qcml"/>
  </outputs>
  <tests>
    <expand macro="autotest_QCCalculator"/>
    <expand macro="manutest_QCCalculator"/>
  </tests>
  <help><![CDATA[Calculates basic quality parameters from MS experiments and subsequent analysis data as identification or feature detection.

]]></help>
  <expand macro="references"/>
</tool>
