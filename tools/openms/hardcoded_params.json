{
	"#": "blacklist parameters",

	"version": [{"value": "@"}],
	"debug": [{"value": "3"}],
	"algorithm:debug": [{"value": "@"}],
	"java_memory": [{"value": "@"}],
	"java_permgen": [{"value": "@"}],
	"#": "type of input is always determined from the file extension (which comes from the Galaxy data type which is translated to OpenMS datatype as defined in filetypes.txt )",
	"in_type": [{"value": "@"}],

	"#": "tool specific blacklist parameters",

	"convert_back": [{"value": "@", "tools": ["OpenSwathMzMLFileCacher"]}],
	"NET_executable": [{
			"value": "@", 
			"tools": ["FileConverter"]
	}],
	"params_file": [{"value": "@", "tools": ["SpectraSTSearchAdapter"]}],

	"#": "TODO not usable in 2.5 https://github.com/OpenMS/OpenMS/issues/4456, corresponding test currently disabled",
    	"consensus_out": [{"value": "@", "tools": ["MaRaClusterAdapter"]}],
	"#": "TODO would need treatment as prefix-output",
	"output_directory": [{"value": "@", "tools": ["MaRaClusterAdapter"]}],

	"#": "hardcode parameter values",

	"comet_version": [{
		"value":"2016.01 rev. 3"
	}],
	"comet_executable": [{
		"value":"comet"
	}],
	"crux_executable": [{
		"value": "crux"
	}],
	"fido_executable": [{
		"value":"Fido"
	}],
	"fidocp_executable": [{
		"value":"FidoChooseParameters"
	}],
	"maracluster_executable": [{
		"value":"/home/berntm/projects/tools-galaxyp/tools/openms/OpenMS2.5.0-git/THIRDPARTY/Linux/64bit/MaRaCluster/maracluster"
	}],
	"mascot_directory": [{
		"value":"TODO"
	}],
	"myrimatch_executable": [{
		"value":"myrimatch"
	}],
	"omssa_executable": [{
		"value":"$(dirname $(realpath $(which omssacl)))/omssacl"
	}],
	"ThermoRaw_executable": [{
		"value": "ThermoRawFileParser.exe", 
		"tools": ["FileConverter"]
	}],
	"pepnovo_executable": [{
		"value":"pepnovo"
	}],
	"percolator_executable": [{
		"value":"percolator"
	}],
	"xtandem_executable": [{
		"value":"xtandem"
	}],
	"executable": [
		{
			"value":"$(dirname $(realpath $(which luciphor2)))/luciphor2.jar",
			"tools": ["LuciphorAdapter"]
		}, {
			"value":"/home/berntm/Downloads/MSFragger-20171106/MSFragger-20171106.jar",
			"tools": ["MSFraggerAdapter"]
		}, {
			"value":"$(msgf_plus -get_jar_path)",
			"tools": ["MSGFPlusAdapter"]
		}, {
			"value": "/home/berntm/Downloads/novor/lib/novor.jar",
			"tools": ["NovorAdapter"]
		}, {
			"value":"$(which sirius)",
			"tools": ["SiriusAdapter", "AssayGeneratorMetabo"]
		}, {
			"value":"spectrast",
			"tools": ["SpectraSTSearchAdapter"]
		}
	],
	"r_executable": [{
		"value":"R"
	}],
	"rscript_executable": [{
		"value":"Rscript"
	}],
	"java_executable": [{
		"value":"java"
	}],
	"log": [{
		"value":"log.txt"
	}],
	"tempDirectory": [{
		"value":"$TMP_DIR"
	}],
	"temp_data_directory": [{
		"value":"$TMP_DIR"
	}],
	"no_progress": [{
		"value": true
	}],
	"num_threads": [{
		"value":"${GALAXY_SLOTS:-1}"
	}], 
	"threads": [{
		"value": "${GALAXY_SLOTS:-1}"
	}],
	"separator": [{
		"value": ",",
		"tools": ["IDMassAccuracy"]
	}],
	"#": "overwrite/add Galaxy xml attributes of some parameters (names need to start with param_)",

	"#": "test is not a hardcoded value since we need to set it in the tool tests", 
	"test": [{
		"CTD:type": "text",
		"XML:type": "hidden"
	}],

	"#": "overwrite CTD attributes of some parameters (some are not possible, e.g. type)",

	"#": "for some tools the user needs to select the desired output type since detection by extension makes no sense for galaxy tools",
	"out_type": [{
	    "CTD:required": true,
	    "CTD:advanced": false
	}],

	"#": "SeedListGenerator with consensusXML input needs a dynamic number of outputs that depends on the content of the input, so we remove this options at the moment because its hard or impossible to implement in Galaxy, https://github.com/OpenMS/OpenMS/issues/4404",
	"#": "FileInfo, MapStatistics, SequenceCoverageCalculator wo -out just writes to stdout. not wanted here",
	"out": [{
		"CTD:is_list": false, 
		"tools": ["SeedListGenerator"]
	}, {
	 	"CTD:required": true,
		"tools": ["FileInfo", "MapStatistics", "SequenceCoverageCalculator"]
	}],

	"#": "https://github.com/OpenMS/OpenMS/pull/4552 .. if this is removed the test will need out_cm_FLAG",
	"out_cm": [{
		"CTD:required": true, 
		"tools": ["MetaboliteAdductDecharger"]
	}],

	"out": [{
		"CTD:restrictions": "csv",
		"tools": ["MassCalculator"]
	}],

	"#": "https://github.com/OpenMS/OpenMS/pull/4553",
	"#": "https://github.com/OpenMS/OpenMS/pull/4562",
	"#": "https://github.com/OpenMS/OpenMS/pull/4569",
	"out": [{
		"CTD:restrictions": "idXML",
		"tools": ["MascotAdapter"]
	},{
		"CTD:restrictions": "csv",
		"tools": ["MassCalculator"]
	}, {
		"CTD:restrictions": "idXML",
		"tools": ["PhosphoScoring"]	
	}],

	"#": "https://github.com/OpenMS/OpenMS/pull/4451", 
	"out_xquestxml": [{
		"CTD:restrictions": "xquest.xml",
		"tools": ["OpenPepXL", "OpenPepXLLF"]
	}],
	"out_xquest_specxml": [{
		"CTD:restrictions": "spec.xml",
		"tools": ["OpenPepXL", "OpenPepXLLF"]
	}],

	"#": "Try to remove xml data type whereever possible",
	"#": "XTandem Adapter output is called .xml in OMS -> use Galaxy's bioml",
	"xml_out": [{
		"CTD:restrictions": "bioml",
		"tools": ["XTandemAdapter"]
	}],
	"in": [{
		"CTD:restrictions": "pepXML,protXML,mascotXML,omssaXML,bioml,psms,tsv,idXML,mzid,xquest.xml",
		"tools": ["IDFileConverter"]
	}],

        "#": "XFDR does not need xml .. redundant with xquest.xml TODO check if list is up to date with each new release",
	"in": [{
		"CTD:restrictions": "idXML,mzid,xquest.xml TODO check if list is up to date with each new release",
		"tools": ["XFDR"]
	}],

        "#": "SpectraSTSearchAdapter does not need xml .. redundant with pep.xml TODO check if list is up to date with each new release",
	"in": [{
		"CTD:restrictions": "txt,tsv,pep.xml,pepXML,html",
		"tools": ["XFDR"]
	}],

	"#": "parameter is a flag but restrictions in wrong order: TODO https://github.com/OpenMS/OpenMS/pull/4455",
	"# masstrace_snr_filtering": [{
		"CTD:restrictions": "true,false",
		"tools": ["MassTraceExtractor"]
	}]
}
