<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="MzMLSplitter" name="MzMLSplitter" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Splits an mzML file into multiple parts</description>
  <macros>
    <token name="@EXECUTABLE@">MzMLSplitter</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
| tee '$stdout'

## Postprocessing
#if $adv_opts_cond.adv_opts_selector=='advanced' and $adv_opts_cond.ctd_out_FLAG
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzml" optional="false" label="Input file" help=" select mzml data sets(s)"/>
    <param name="out" argument="-out" type="text" optional="true" value="" label="Prefix for output files ('_part1of2.mzML' etc" help="will be appended; default: same as 'in' without the file extension)">
      <expand macro="list_string_san"/>
    </param>
    <param name="parts" argument="-parts" type="integer" optional="true" min="1" value="1" label="Number of parts to split into (takes precedence over 'size' if set)" help=""/>
    <param name="size" argument="-size" type="integer" optional="true" min="0" value="0" label="Approximate upper limit for resulting file sizes (in 'unit')" help=""/>
    <param name="unit" argument="-unit" display="radio" type="select" optional="false" label="Unit for 'size' (base 1024)" help="">
      <option value="KB">KB</option>
      <option value="MB" selected="true">MB</option>
      <option value="GB">GB</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="no_chrom" argument="-no_chrom" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Remove chromatograms, keep only spectra" help=""/>
    <param name="no_spec" argument="-no_spec" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Remove spectra, keep only chromatograms" help=""/>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
      <param name="ctd_out_FLAG" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Output used ctd (ini) configuration file"/>
    </expand>
  </inputs>
  <outputs>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>adv_opts_cond["adv_opts_selector"]=="advanced" and adv_opts_cond["ctd_out_FLAG"]</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_MzMLSplitter"/>
    <expand macro="manutest_MzMLSplitter"/>
  </tests>
  <help><![CDATA[Splits an mzML file into multiple parts


For more information, visit http://www.openms.de/documentation/UTILS_MzMLSplitter.html]]></help>
  <expand macro="references"/>
</tool>
