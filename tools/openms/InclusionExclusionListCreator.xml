<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Targeted Experiments]-->
<tool id="InclusionExclusionListCreator" name="InclusionExclusionListCreator" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Creates inclusion and/or exclusion lists.</description>
  <macros>
    <token name="@EXECUTABLE@">InclusionExclusionListCreator</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
#if $include:
  mkdir include &&
  ln -s '$include' 'include/${re.sub("[^\w\-_]", "_", $include.element_identifier)}.$gxy2omsext($include.ext)' &&
#end if
#if $exclude:
  mkdir exclude &&
  ln -s '$exclude' 'exclude/${re.sub("[^\w\-_]", "_", $exclude.element_identifier)}.$gxy2omsext($exclude.ext)' &&
#end if
mkdir out &&
#if $rt_model:
  mkdir rt_model &&
  ln -s '$rt_model' 'rt_model/${re.sub("[^\w\-_]", "_", $rt_model.element_identifier)}.$gxy2omsext($rt_model.ext)' &&
#end if
#if $pt_model:
  mkdir pt_model &&
  ln -s '$pt_model' 'pt_model/${re.sub("[^\w\-_]", "_", $pt_model.element_identifier)}.$gxy2omsext($pt_model.ext)' &&
#end if
#if $raw_data:
  mkdir raw_data &&
  ln -s '$raw_data' 'raw_data/${re.sub("[^\w\-_]", "_", $raw_data.element_identifier)}.$gxy2omsext($raw_data.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
#if $include:
  -include
  'include/${re.sub("[^\w\-_]", "_", $include.element_identifier)}.$gxy2omsext($include.ext)'
#end if
#if $exclude:
  -exclude
  'exclude/${re.sub("[^\w\-_]", "_", $exclude.element_identifier)}.$gxy2omsext($exclude.ext)'
#end if
-out
'out/output.${gxy2omsext("csv")}'
#if $rt_model:
  -rt_model
  'rt_model/${re.sub("[^\w\-_]", "_", $rt_model.element_identifier)}.$gxy2omsext($rt_model.ext)'
#end if
#if $pt_model:
  -pt_model
  'pt_model/${re.sub("[^\w\-_]", "_", $pt_model.element_identifier)}.$gxy2omsext($pt_model.ext)'
#end if
#if $raw_data:
  -raw_data
  'raw_data/${re.sub("[^\w\-_]", "_", $raw_data.element_identifier)}.$gxy2omsext($raw_data.ext)'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("csv")}' '$out'
#if $adv_opts_cond.ctd_out_FLAG
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="include" argument="-include" type="data" format="fasta,featurexml" optional="true" label="Inclusion list input file in FASTA or featureXML format" help=" select fasta,featurexml data sets(s)"/>
    <param name="exclude" argument="-exclude" type="data" format="fasta,featurexml,idxml" optional="true" label="Exclusion list input file in featureXML, idXML or FASTA format" help=" select fasta,featurexml,idxml data sets(s)"/>
    <param name="rt_model" argument="-rt_model" type="data" format="txt" optional="true" label="RTModel file used for the rt prediction of peptides in FASTA files" help=" select txt data sets(s)"/>
    <param name="pt_model" argument="-pt_model" type="data" format="txt" optional="true" label="PTModel file used for the pt prediction of peptides in FASTA files (only needed for inclusion_strategy PreotinBased_LP)" help=" select txt data sets(s)"/>
    <param name="inclusion_charges" argument="-inclusion_charges" type="text" optional="true" value="" label="List containing the charge states to be considered for the inclusion list compounds, space separated" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_integer_valsan">
        <validator type="expression" message="a space separated list of integer values in the range 1: is required"><![CDATA[len(value.split(' ')) == len([_ for _ in value.split(' ') if  1 <= int(_)])
]]></validator>
      </expand>
    </param>
    <param name="inclusion_strategy" argument="-inclusion_strategy" display="radio" type="select" optional="false" label="strategy to be used for selection" help="">
      <option value="FeatureBased_LP">FeatureBased_LP</option>
      <option value="ProteinBased_LP">ProteinBased_LP</option>
      <option value="ALL" selected="true">ALL</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="exclusion_charges" argument="-exclusion_charges" type="text" optional="true" value="" label="List containing the charge states to be considered for the exclusion list compounds (for idXML and FASTA input), space separated" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_integer_valsan">
        <validator type="expression" message="a space separated list of integer values in the range 1: is required"><![CDATA[len(value.split(' ')) == len([_ for _ in value.split(' ') if  1 <= int(_)])
]]></validator>
      </expand>
    </param>
    <param name="raw_data" argument="-raw_data" type="data" format="mzml" optional="true" label="File containing the raw data (only needed for FeatureBased_LP)" help=" select mzml data sets(s)"/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <section name="algorithm" title="Inclusion/Exclusion algorithm section" help="" expanded="false">
      <section name="InclusionExclusionList" title="" help="" expanded="false">
        <param name="missed_cleavages" argument="-algorithm:InclusionExclusionList:missed_cleavages" type="integer" optional="true" value="0" label="Number of missed cleavages used for protein digestion" help=""/>
        <section name="RT" title="" help="" expanded="false">
          <param name="unit" argument="-algorithm:InclusionExclusionList:RT:unit" display="radio" type="select" optional="false" label="Create lists with units as seconds instead of minutes" help="">
            <option value="minutes" selected="true">minutes</option>
            <option value="seconds">seconds</option>
            <expand macro="list_string_san"/>
          </param>
          <param name="use_relative" argument="-algorithm:InclusionExclusionList:RT:use_relative" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use relative RT window, which depends on RT of precurso" help=""/>
          <param name="window_relative" argument="-algorithm:InclusionExclusionList:RT:window_relative" type="float" optional="true" min="0.0" max="10.0" value="0.05" label="[for RT:use_relative == true] The relative factor X for the RT exclusion window" help="e.g. the window is calculated as [rt - rt*X, rt + rt*X]"/>
          <param name="window_absolute" argument="-algorithm:InclusionExclusionList:RT:window_absolute" type="float" optional="true" min="0.0" value="90.0" label="[for RT:use_relative == false] The absolute value X for the RT exclusion window in [sec]" help="e.g. the window is calculated as [rt - X, rt + X]"/>
        </section>
        <section name="merge" title="" help="" expanded="false">
          <param name="mz_tol" argument="-algorithm:InclusionExclusionList:merge:mz_tol" type="float" optional="true" min="0.0" value="10.0" label="Two inclusion/exclusion windows are merged when they (almost) overlap in RT (see 'rt_tol') and are close in m/z by this tolerance" help="Unit of this is defined in 'mz_tol_unit'"/>
          <param name="mz_tol_unit" argument="-algorithm:InclusionExclusionList:merge:mz_tol_unit" display="radio" type="select" optional="false" label="Unit of 'mz_tol'" help="">
            <option value="ppm" selected="true">ppm</option>
            <option value="Da">Da</option>
            <expand macro="list_string_san"/>
          </param>
          <param name="rt_tol" argument="-algorithm:InclusionExclusionList:merge:rt_tol" type="float" optional="true" min="0.0" value="1.1" label="Maximal RT delta (in seconds) which would allow two windows in RT to overlap (which causes merging the windows)" help="Two inclusion/exclusion windows are merged when they (almost) overlap in RT and are close in m/z by this tolerance (see 'mz_tol'). Unit of this param is [seconds]"/>
        </section>
      </section>
      <section name="PrecursorSelection" title="" help="" expanded="false">
        <param name="ms2_spectra_per_rt_bin" argument="-algorithm:PrecursorSelection:ms2_spectra_per_rt_bin" type="integer" optional="true" min="1" value="5" label="Number of allowed MS/MS spectra in a retention time bin" help=""/>
        <param name="exclude_overlapping_peaks" argument="-algorithm:PrecursorSelection:exclude_overlapping_peaks" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If true, overlapping or nearby peaks (within 'min_mz_peak_distance') are excluded for selection" help=""/>
        <section name="Exclusion" title="" help="" expanded="false">
          <param name="use_dynamic_exclusion" argument="-algorithm:PrecursorSelection:Exclusion:use_dynamic_exclusion" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If true dynamic exclusion is applied" help=""/>
          <param name="exclusion_time" argument="-algorithm:PrecursorSelection:Exclusion:exclusion_time" type="float" optional="true" min="0.0" value="100.0" label="The time (in seconds) a feature is excluded" help=""/>
        </section>
        <section name="ProteinBasedInclusion" title="" help="" expanded="false">
          <param name="max_list_size" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:max_list_size" type="integer" optional="true" min="1" value="1000" label="The maximal number of precursors in the inclusion list" help=""/>
          <section name="rt" title="" help="" expanded="false">
            <param name="min_rt" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:rt:min_rt" type="float" optional="true" min="0.0" value="960.0" label="Minimal rt in seconds" help=""/>
            <param name="max_rt" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:rt:max_rt" type="float" optional="true" min="0.0" value="3840.0" label="Maximal rt in seconds" help=""/>
            <param name="rt_step_size" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:rt:rt_step_size" type="float" optional="true" min="1.0" value="30.0" label="rt step size in seconds" help=""/>
            <param name="rt_window_size" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:rt:rt_window_size" type="integer" optional="true" min="1" value="100" label="rt window size in seconds" help=""/>
          </section>
          <section name="thresholds" title="" help="" expanded="false">
            <param name="min_protein_id_probability" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:min_protein_id_probability" type="float" optional="true" min="0.0" max="1.0" value="0.95" label="Minimal protein probability for a protein to be considered identified" help=""/>
            <param name="min_pt_weight" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:min_pt_weight" type="float" optional="true" min="0.0" max="1.0" value="0.5" label="Minimal pt weight of a precurso" help=""/>
            <param name="min_mz" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:min_mz" type="float" optional="true" min="0.0" value="500.0" label="Minimal mz to be considered in protein based LP formulation" help=""/>
            <param name="max_mz" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:max_mz" type="float" optional="true" min="0.0" value="5000.0" label="Minimal mz to be considered in protein based LP formulation" help=""/>
            <param name="use_peptide_rule" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:use_peptide_rule" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Use peptide rule instead of minimal protein id probability" help=""/>
            <param name="min_peptide_ids" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:min_peptide_ids" type="integer" optional="true" min="1" value="2" label="If use_peptide_rule is true, this parameter sets the minimal number of peptide ids for a protein id" help=""/>
            <param name="min_peptide_probability" argument="-algorithm:PrecursorSelection:ProteinBasedInclusion:thresholds:min_peptide_probability" type="float" optional="true" min="0.0" max="1.0" value="0.95" label="If use_peptide_rule is true, this parameter sets the minimal probability for a peptide to be safely identified" help=""/>
          </section>
        </section>
        <section name="feature_based" title="" help="" expanded="false">
          <param name="no_intensity_normalization" argument="-algorithm:PrecursorSelection:feature_based:no_intensity_normalization" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Flag indicating if intensities shall be scaled to be in [0,1]" help="This is done for each feature separately, so that the feature's maximal intensity in a spectrum is set to 1"/>
          <param name="max_number_precursors_per_feature" argument="-algorithm:PrecursorSelection:feature_based:max_number_precursors_per_feature" type="integer" optional="true" min="1" value="1" label="The maximal number of precursors per feature" help=""/>
        </section>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="ctd_out_FLAG" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Output used ctd (ini) configuration file"/>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="csv"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>adv_opts_cond["adv_opts_selector"]=="advanced" and adv_opts_cond["ctd_out_FLAG"]</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_InclusionExclusionListCreator"/>
    <expand macro="manutest_InclusionExclusionListCreator"/>
  </tests>
  <help><![CDATA[Creates inclusion and/or exclusion lists.


For more information, visit http://www.openms.de/documentation/TOPP_InclusionExclusionListCreator.html]]></help>
  <expand macro="references"/>
</tool>
