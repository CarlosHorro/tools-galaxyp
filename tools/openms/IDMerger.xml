<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [File Handling]-->
<tool id="IDMerger" name="IDMerger" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>Merges several protein/peptide identification files into one file.</description>
  <macros>
    <token name="@EXECUTABLE@">IDMerger</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
${ ' '.join(["ln -s '%s' 'in/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _]) }
mkdir out &&
#if $add_to:
  mkdir add_to &&
  ln -s '$add_to' 'add_to/${re.sub("[^\w\-_]", "_", $add_to.element_identifier)}.$gxy2omsext($add_to.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
${' '.join(["'in/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _])}
-out
'out/output.${gxy2omsext("idxml")}'
#if $add_to:
  -add_to
  'add_to/${re.sub("[^\w\-_]", "_", $add_to.element_identifier)}.$gxy2omsext($add_to.ext)'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("idxml")}' '$out']]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="idxml" multiple="true" optional="false" label="Input files separated by blanks" help=" select idxml data sets(s)"/>
    <param name="add_to" argument="-add_to" type="data" format="idxml" optional="true" label="Optional input file" help="IDs from 'in' are added to this file, but only if the (modified) peptide sequences are not present yet (considering only best hits per spectrum) select idxml data sets(s)"/>
    <param name="annotate_file_origin" argument="-annotate_file_origin" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Store the original filename in each protein/peptide identification (meta value: file_origin)" help=""/>
    <param name="pepxml_protxml" argument="-pepxml_protxml" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Merge idXML files derived from a pepXML and corresponding protXML file.Exactly two input files are expected in this case" help="Not compatible with 'add_to'"/>
    <param name="merge_proteins_add_PSMs" argument="-merge_proteins_add_PSMs" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Merge all identified proteins by accession into one protein identification run but keep all the PSMs with updated links to potential new protein ID#s" help="Not compatible with 'add_to'"/>
    <param name="threads" argument="-threads" type="hidden" value="${GALAXY_SLOTS:-1}">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <expand macro="adv_opts_macro">
      <param name="log" argument="-log" type="hidden" value="log.txt">
        <expand macro="list_string_san"/>
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="no_progress" argument="-no_progress" type="hidden" value="true">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
      <param name="force" argument="-force" type="boolean" optional="true" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" value="false">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="idxml"/>
  </outputs>
  <tests>
    <expand macro="autotest_IDMerger"/>
    <expand macro="manutest_IDMerger"/>
  </tests>
  <help><![CDATA[Merges several protein/peptide identification files into one file.

]]></help>
  <expand macro="references"/>
</tool>
