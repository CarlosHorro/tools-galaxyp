<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [ID Processing]-->
<tool id="XFDR" name="XFDR" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Calculates false discovery rate estimates on crosslink identifications</description>
  <macros>
    <token name="@EXECUTABLE@">XFDR</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
#if $in:
  mkdir in &&
  ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#end if
#if "out_idXML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_idXML &&
#end if
#if "out_mzIdentML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_mzIdentML &&
#end if
#if "out_xquest_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_xquest &&
#end if

## Main program call

set -o pipefail &&
export PYTHONPATH='$__tool_directory__/CTDopts/' &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
#if $in:
  -in
  'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#end if
#if "out_idXML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_idXML
  'out_idXML/output.${gxy2omsext("idxml")}'
#end if
#if "out_mzIdentML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_mzIdentML
  'out_mzIdentML/output.${gxy2omsext("mzid")}'
#end if
#if "out_xquest_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_xquest
  'out_xquest/output.${gxy2omsext("xquest.xml")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "out_idXML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_idXML/output.${gxy2omsext("idxml")}' '$out_idXML'
#end if
#if "out_mzIdentML_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_mzIdentML/output.${gxy2omsext("mzid")}' '$out_mzIdentML'
#end if
#if "out_xquest_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_xquest/output.${gxy2omsext("xquest.xml")}' '$out_xquest'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="idxml,mzid" optional="true" label="Crosslink Identifications in either xquest.xml, idXML, or mzIdentML format (as produced by OpenPepXL)" help=" select idxml,mzid data sets(s)"/>
    <param name="decoy_string" argument="-decoy_string" type="text" optional="true" value="DECOY_" label="Prefix of decoy protein ids" help="The correspondig target protein id should be retrievable by deleting this prefix">
      <expand macro="list_string_san"/>
    </param>
    <param name="minborder" argument="-minborder" type="float" optional="true" value="-50.0" label="Filter for minimum precursor mass error (ppm) before FDR estimation" help="Values outside of the tolerance window of the original search will effectively disable this filter"/>
    <param name="maxborder" argument="-maxborder" type="float" optional="true" value="50.0" label="Filter for maximum precursor mass error (ppm) before FDR estimation" help="Values outside of the tolerance window of the original search will effectively disable this filter"/>
    <param name="mindeltas" argument="-mindeltas" type="float" optional="true" min="0.0" max="1.0" value="0.0" label="Filter for delta score, 0 disables the filte" help="Minimum delta score required, hits are rejected if larger or equal. The delta score is a ratio of the score of a hit and the score of the next best hit to the same spectrum, so the value range is between 0 and 1 with 1.0 meaning the scores are equal and 0.5 meaning the next best score is half as high as the current one"/>
    <param name="minionsmatched" argument="-minionsmatched" type="integer" optional="true" min="0" value="0" label="Filter for minimum matched ions per peptide" help=""/>
    <param name="uniquexl" argument="-uniquexl" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Calculate statistics based only on unique IDs" help="For a set of IDs from equal candidates (same pair of peptides, modifications and cross-linked positions), only the highest scoring hit will be considered. By default the score distribution will be estimated using all 1st ranked candidates"/>
    <param name="no_qvalues" argument="-no_qvalues" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Do not transform simple FDR to q-values" help=""/>
    <param name="minscore" argument="-minscore" type="float" optional="true" value="-10.0" label="Minimum score to be considered for FDR calculation" help="A number lower than the lowest score will effectively disable this filter"/>
    <param name="binsize" argument="-binsize" type="float" optional="true" min="1e-15" value="0.0001" label="Bin size for the cumulative histograms for score distributions" help="Should be about the same size as the smallest expected difference between scores. Smaller numbers will make XFDR more robust, but much slower. Negative numbers are not allowed. Should only be changed if the range of the main score changes or another score than the OpenPepXL score is used"/>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overwrite tool specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" multiple="true" label="Optional outputs" optional="false">
      <option value="out_idXML_FLAG">out_idXML (Enables the test mode (needed for internal use only))</option>
      <option value="out_mzIdentML_FLAG">out_mzIdentML (Enables the test mode (needed for internal use only))</option>
      <option value="out_xquest_FLAG">out_xquest (Enables the test mode (needed for internal use only))</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out_idXML" label="${tool.name} on ${on_string}: out_idXML" format="idxml">
      <filter>"out_idXML_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="out_mzIdentML" label="${tool.name} on ${on_string}: out_mzIdentML" format="mzid">
      <filter>"out_mzIdentML_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="out_xquest" label="${tool.name} on ${on_string}: out_xquest" format="xquest.xml">
      <filter>"out_xquest_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>len(OPTIONAL_OUTPUTS) == 0</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>"ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_XFDR"/>
    <expand macro="manutest_XFDR"/>
  </tests>
  <help><![CDATA[Calculates false discovery rate estimates on crosslink identifications


For more information, visit http://www.openms.de/documentation/TOPP_XFDR.html]]></help>
  <expand macro="references"/>
</tool>
