<tool id="maxquant_mqpar" name="MaxQuant (using mqpar.xml)" version="@VERSION@">
    <macros>
        <import>../maxquant/macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@VERSION@">maxquant</requirement>
        <requirement type="package" version="3.7">python</requirement>
        <requirement type="package" version="5.1.2">pyyaml</requirement>
        <requirement type="package" version="0.92.6">r-ptxqc</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    ## link galaxy datasets to filenams accepted by maxquant
    #import re
    #set names = [re.sub('@SUBSTITUTION_RX@', '_', str($n.element_identifier)) for $n in $inpute.infiles]
    #set names_with_ext = [($name if ($name).lower().endswith(str($input.ftype)) else $name + str($input.ftype)) for $name in $names]
    #for $target, $link in zip($infiles, $names_with_ext)
        && ln -s '$target' '$link'
    #end for

    && python3 '$__tool_directory__/modify_mqpar.py'
    --infiles='$infiles'
    --version=@VERSION@
    --num_threads=\${GALAXY_SLOTS:-1}
    --substitution_rx='@SUBSTITUTION_RX@'
    --fasta_files='$fasta_files'
    --description_parse_rule='$description_parse_rule'
    --identifier_parse_rule='$identifier_parse_rule'
    '$mqpar'

    && maxquant mqpar.xml
    #if 'log' in $output_opts.output:
        > '$log'
    #end if
    && mv '$mqpar' combined/txt/mqpar.xml
    #if 'output_all' in $output_opts.output:
        && tar -zcf '$output_all' ./combined/txt
    #end if
  
    #if "ptxqc_report" in $output_opts.output:
        && Rscript '$qr' '$qr_yaml'
        #if 'log' in $output_opts.output:
            >> '$log' 2>&1
        #end if
    #end if
    ]]></command>

    <configfiles>
        <configfile name="qr_yaml">
            PTXQC:
              ReportFilename:
                extended: yes
              UseLocalMQPar: yes
              NameLengthMax_num: 10.0
              OutputFormats:
              - plainPDF
              PlainPDF:
                AddPageNumbers: 'on'
            File:
              Parameters:
                enabled: ${qc.parameters}
              Summary:
                enabled: ${qc.summary}
                IDRate:
                  Thresh_bad_num: 20.0
                  Thresh_great_num: 35.0
              ProteinGroups:
                enabled: ${qc.proteingroups}
                RatioPlot:
                  LabelIncThresh_num: 4.0
                IntensityThreshLog2_num: 25.0
              Evidence:
                enabled: ${qc.evidence}
                ProteinCountThresh_num: 3500.0
                IntensityThreshLog2_num: 23.0
                PeptideCountThresh_num: 15000.0
                SpecialContaminants:
                  cont_MYCO:
                  - MYCOPLASMA
                  - '1'
                MQpar_MatchingTimeWindow_num: 0.0
                MatchBetweenRuns_wA: auto
                MQpar_firstSearchTol_num: 20.0
                firstSearch_outOfCalWarnSD_num: 2.0
                MQpar_mainSearchTol_num: 4.5
              MsMs:
                enabled: ${qc.msms}
              MsMsScans:
                enabled: ${qc.msmsscans}
                IonInjectionThresh_num: 10.0
            order:
              qcMetric_PAR: 1.0
              qcMetric_PG_PCA: 3.0
              qcMetric_EVD_Top5Cont: 10.0
              qcMetric_PG_Ratio: 19.0
              qcMetric_EVD_UserContaminant: 20.0
              qcMetric_EVD_PeptideInt: 30.0
              qcMetric_EVD_ReporterInt: 31.0
              qcMetric_PG_RawInt: 32.0
              qcMetric_PG_LFQInt: 33.0
              qcMetric_PG_ReporterInt: 34.0
              qcMetric_MSMS_MissedCleavages: 40.0
              qcMetric_EVD_Charge: 100.0
              qcMetric_PG_Cont: 110.0
              qcMetric_MSMSScans_TopNoverRT: 120.0
              qcMetric_EVD_IDoverRT: 150.0
              qcMetric_EVD_RTPeakWidth: 170.0
              qcMetric_EVD_MBRAlign: 210.0
              qcMetric_EVD_MBRIdTransfer: 220.0
              qcMetric_EVD_MBRaux: 221.0
              qcMetric_MSMSScans_IonInjTime: 240.0
              qcMetric_MSMSScans_MSMSIntensity: 245.0
              qcMetric_EVD_MS2OverSampling: 250.0
              qcMetric_EVD_PreCal: 260.0
              qcMetric_EVD_PostCal: 270.0
              qcMetric_MSMS_MSMSDecal: 280.0
              qcMetric_SM_MSMSIdRate: 300.0
              qcMetric_MSMSScans_TopNID: 380.0
              qcMetric_MSMSScans_DepPep: 383.0
              qcMetric_EVD_MissingValues: 390.0
              qcMetric_EVD_PeptideCount: 400.0
              qcMetric_EVD_ProteinCount: 450.0
              qcMetric_AverageQualOverall: 9999.0
        </configfile>
        <configfile name="qr">
            library(PTXQC)
            library(yaml)
            library(methods)
            args = commandArgs(trailingOnly=TRUE)
            yaml_config = yaml.load_file(input = args[1])
            r = createReport('./combined/txt', yaml_config)
            cat(paste0("\nReport generated as '", r\$report_file, "'\n\n"))
            file.copy(r\$report_file, '$ptxqc_report')
        </configfile>
    </configfiles>

    <inputs>
        <conditional name="input">
            <param name="ftype" type="select" label="choose the type of your input files">
                <option value=".thermo.raw">thermo.raw</option>
                <option value=".mzxml">mzxml</option>
            </param>
            <when value=".thermo.raw"> 
                <param multiple="true" name="infiles" type="data"
                       format="thermo.raw" label="RAW Files"
                       help="Specify one or more Thermo RAW files" />
            </when>
            <when value=".mzxml">
                <param multiple="true" name="infiles" type="data"
                       format="mzxml" label="mzXML Files"
                       help="Specify one or more mzXML files" />
            </when>
        </conditional>
        <param format="fasta" multiple="true" name="fasta_files"
               type="data" label="FASTA files"
               help="Specify one or more FASTA databases." />
        <param name="identifier_parse_rule" type="text"
               label="identifier parse rule" value="^&gt;.*\|(.*)\|.*$">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param name="description_parse_rule" type="text"
               label="description parse rule" value="^&gt;.*\|.*\|[^ ]+ (.*) OS.*$"
               help="Modify parse rules if needed">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param type="data" name="mqpar" format="xml"
               label="mqpar.xml file with your search parameters. RAW file names 
                      must match the names displayed in galaxy. Their paths 
                      from the local machine are ignored. E.g. a file named
                      'test01.raw' in galaxy can either be named 'test01.raw' or
                      'D:\path\to\test01.raw' in the mqpar.xml."/>

        <section title="Quality Control Options (only active when PTXQC report is selected as output)"
                 name="qc" expanded="false">
            <param name="parameters" type="boolean" checked="true"
	           label="use parameters.txt?" truevalue="yes" falsevalue="no" />
            <param name="summary" type="boolean" checked="true"
	           label="use summary.txt?" truevalue="yes" falsevalue="no" />
            <param name="proteingroups" type="boolean" checked="true"
	           label="use proteinGroups.txt?" truevalue="yes" falsevalue="no" />
            <param name="evidence" type="boolean" checked="true"
	           label="use evidence.txt?" truevalue="yes" falsevalue="no" />
            <param name="msms" type="boolean" checked="true"
	           label="use msms.txt?" truevalue="yes" falsevalue="no" />
            <param name="msmsscans" type="boolean" checked="true"
	           label="use msmsScans.txt?" truevalue="yes" falsevalue="no" />
        </section>

        
        <param type="select" name="output" label="Select the desired outputs."
               multiple="true" optional="false">
            <option value="proteinGroups">Protein Groups</option>
            <option value="mqpar">mqpar.xml</option>
            <option value="peptides">Peptides</option>
            <option value="evidence">Evidence</option>
            <option value="parameters">Tabular Paramters</option>
            <option value="msms">MSMS</option>
            <option value="mzTab">mzTab</option>
            <option value="allPeptides">all peptides</option>
            <option value="libraryMatch">library match</option>
            <option value="matchedFeatures">matched features</option>
            <option value="modificationSpecificPeptides">modification specific peptides</option>
            <option value="ms3Scans">ms3 scans</option>
            <option value="msmsScans">msms scans</option>
            <option value="mzRange">mz range</option>
            <option value="peptideSection">peptide section</option>
            <option value="summary">summary</option>
            <option value="output_all">complete 'combined/txt/' directory (compressed)</option>
            <option value="log">MaxQuant and PTXQC log</option>
            <option value="ptxqc_report">PTXQC report</option>
            <option value="config">yaml config file</option>
        </param>
    </inputs>

    <outputs>
        <expand macro="output_from_wdir" name="proteinGroups" label="MaxQuant Protein Groups"/>
        <expand macro="output_from_wdir" name="mqpar" label="mqpar.xml" format="xml" ext="xml"/>
        <expand macro="output_from_wdir" name="peptides" label="MaxQuant Peptides"/>
        <expand macro="output_from_wdir" name="evidence" label="MaxQuant Evidence"/>
        <expand macro="output_from_wdir" name="parameters" label="MaxQuant Tabular Parameters"/>
        <expand macro="output_from_wdir" name="msms" label="MaxQuant MSMS"/>
        <expand macro="output_from_wdir" name="mzTab" label="mzTab" ext="mzTab"/>
        <expand macro="output_from_wdir" name="allPeptides" label="all peptides"/>
        <expand macro="output_from_wdir" name="libraryMatch" label="library match"/>
        <expand macro="output_from_wdir" name="matchedFeatures" label="matched features"/>
        <expand macro="output_from_wdir" name="modificationSpecificPeptides" label="modification specific peptides"/>
        <expand macro="output_from_wdir" name="ms3Scans" label="ms3 scans"/>
        <expand macro="output_from_wdir" name="msmsScans" label="msms Scans"/>
        <expand macro="output_from_wdir" name="mzRange" label="mz range"/>
        <expand macro="output_from_wdir" name="peptideSection" label="peptide section"/>
        <expand macro="output_from_wdir" name="summary" label="MaxQuant summary"/>
        <expand macro="output" name="output_all" format="tar" label="'combined/txt/' directory"/>
        <expand macro="output" name="log" format="txt" label="log"/>
        <expand macro="output" name="ptxqc_report" format="pdf" label="PTXQC report"/>
        <expand macro="output" name="config" format="txt" label="yaml config file"/>
    </outputs>

    <tests>
        <test>
            <param name="ftype" value=".mzxml" />
            <param name="infiles" value="BSA_min_22,BSA_min_21.mzXML" />
            <param name="fasta_files" value="bsa.fasta" />
            <param name="identifier_parse_rule" value="&gt;([^\s]*)" />
            <param name="description_parse_rule" value="&gt;(.*)" />
            <param name="mqpar" value="two/mqpar.xml" />
            <param name="output" value="evidence,msms,mzTab,allPeptides,msmsScans,mzRange,parameters,peptides,peptideSection,proteinGroups,summary,modificationSpecificPeptides,ptxqc_report" />
            <output name="evidence" file="two/combined/txt/evidence.txt" />
            <output name="msms" file="two/combined/txt/msms.txt" />
            <output name="mzTab" file="two/combined/txt/mzTab.mzTab" lines_diff="4"/>
            <output name="allPeptides" file="two/combined/txt/allPeptides.txt" lines_diff="14"/>
            <output name="msmsScans" file="two/combined/txt/msmsScans.txt" />
            <output name="mzRange" file="two/combined/txt/mzRange.txt" />
            <output name="parameters" file="two/combined/txt/parameters.txt" lines_diff="8"/>
            <output name="peptides" file="two/combined/txt/peptides.txt" />
            <output name="peptideSection" file="two/combined/txt/peptideSection.txt" />
            <output name="proteinGroups" file="two/combined/txt/proteinGroups.txt" />
            <output name="summary" file="two/combined/txt/summary.txt" />
            <output name="modificationSpecificPeptides" file="two/combined/txt/modificationSpecificPeptides.txt" />
        </test>
    </tests>
    <help><![CDATA[
MaxQuant is a quantitative proteomics software package designed for analyzing large mass-spectrometric data sets. 

This tool is a wrapper for MaxQuant v@VERSION@. It gets its search parameters from a previously created parameter file (mqpar.xml). A similiar tool that allows the specification of search parameters directly through galaxy is available as well and should be preferred, if possible.

**Input files**

- Thermo raw file or mzXML file
    - The datatype has to be 'thermo.raw' or 'mzXML'. Make sure to specify the correct datatype either during upload to Galaxy or afterwards (edit attributes --> datatypes)
- mqpar.xml: 
    - MaxQuant parameters will be taken from the provided mqpar.xml file. This parameter file MUST be created using the same version of MaxQuant as is used by this tool. The correct version of MaxQuant can be obtained via the bioconda channel for the conda package manager.

**Output files**

Different output file options are available, most of them are part of the MaxQuant txt folder. An additional mztab output option is implemented. 
    ]]></help>
    <citations>
        <citation type="bibtex">
        @article{cox2008maxquant,
        title={MaxQuant enables high peptide identification rates, individualized
        ppb-range mass accuracies and proteome-wide protein quantification},
        author={Cox, J{\"u}rgen and Mann, Matthias},
        journal={Nature biotechnology},
        volume={26},
        number={12},
        pages={1367},
        year={2008},
        publisher={Nature Publishing Group}
        }
        </citation>
        <citation type="bibtex">
        @article{tyanova2016maxquant,
        title={The MaxQuant computational platform for mass
        spectrometry-based shotgun proteomics},
        author={Tyanova, Stefka and Temu, Tikira and Cox, J{\"u}rgen},
        journal={Nature protocols},
        volume={11},
        number={12},
        pages={2301},
        year={2016},
        publisher={Nature Publishing Group}
        }
        </citation>
        <citation type="doi">10.1021/acs.jproteome.5b00780</citation>
    </citations>
</tool>
